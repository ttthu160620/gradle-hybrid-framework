/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


configurations {
    aspectj
}

dependencies {
    // https://mvnrepository.com/artifact/org.testng/testng
	testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
	implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'
	
	// https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
	implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.2.0'
	
	// https://mvnrepository.com/artifact/org.uncommons/reportng
	testImplementation group: 'org.uncommons', name: 'reportng', version: '1.1.4'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.0'
	
	// https://mvnrepository.com/artifact/com.aventstack/extentreports
	implementation group: 'com.aventstack', name: 'extentreports', version: '5.0.8'
	
	// https://mvnrepository.com/artifact/log4j/log4j
	implementation group: 'log4j', name: 'log4j', version: '1.2.16'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	
	// https://mvnrepository.com/artifact/velocity/velocity-dep
	implementation group: 'velocity', name: 'velocity-dep', version: '1.4'
	
	// https://mvnrepository.com/artifact/com.google.inject/guice
	implementation group: 'com.google.inject', name: 'guice', version: '4.1.0'
	
	// https://mvnrepository.com/artifact/commons-logging/commons-logging
	implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
	
	// https://mvnrepository.com/artifact/com.github.javafaker/javafaker
	implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.1'
	
	// https://mvnrepository.com/artifact/io.qameta.allure/allure-testng
	implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.5'
	
    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
	runtimeOnly group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.8'
    
}

test {
	useTestNG(){
        suites 'src/test/resources/runNopCommerceTest.xml'
        outputDirectory = file("$projectDir/report-output")
    }
    
    testLogging {
        showStandardStreams = true
    }
    
    reports.html.setDestination(file("$projectDir/gradle-output"))
}

task smokeTests(type: Test) { 
   useTestNG() {
       useDefaultListeners = false
       suites 'src/test/resources/runNopCommerceTest.xml'
       includeGroups 'smoke'
   }
}
